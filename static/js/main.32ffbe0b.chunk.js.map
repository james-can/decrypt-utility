{"version":3,"sources":["Convert.js","components/output.js","components/ConverterTool.js","components/ListItem.js","components/ListItems.js","components/xortool.js","components/DecryptTool.js","App.js","serviceWorker.js","index.js"],"names":["Convert","inValue","inType","outType","decToHex","decToBin","decToAscii","hexToDec","hexToBin","hexToAscii","binToDec","binToHex","binToAscii","asciiToDec","asciiToHex","asciiToBin","ascii","dec","bin","r","d","Math","floor","concat","10","11","12","13","14","15","hex","map","a","b","c","e","f","i","length","parseInt","includes","pow","decimal","charCodeAt","nibble","b0","b1","c0","c1","result","j","sum","arr","xor","rev","split","reverse","join","substr","String","fromCharCode","Output","props","react_default","createElement","id","style","styleProp","outputValue","ConverterTool","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","shouldDisableConversion","opt1","opt2","value","dropDown1Changed","setState","prevState","selectedOption1","fromType","disableInput","selectedOption2","dropDown2Changed","toType","state","output","input","buttonClickOK","bind","assertThisInitialized","inputKeyDown","key","convertByType","target","options","label","className","marginBottom","fontSize","react_select_esm","onChange","defineProperty","type","disabled","onKeyDown","components_output","Component","ListItem","borderRadius","item","float","cursor","onClick","closeHandler","ListItems","items","push","components_ListItem","toString","EmphasizedChar","emphasized","localStyle","char","mapSpaces","str","arguments","undefined","index","xortool_EmphasizedChar","XorTool","dropDownChanged","outputStyled","outputNonStyled","selectedOption","event","filtered","filter","currentVal","binaryArray","binaryValue","batchXor","newItem","toConsumableArray","validInput","test","inputText","newBinary","text","styled","nonStyled","backgroundColor","color","display","defaultValue","background","minHeight","DecryptTool","_Component","kInput","ctInput","ctInputKeyDown","kInputKeyDown","inherits","createClass","defaultProps","App","height","align","width","components_DecryptTool","xortool","components_ConverterTool","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.32ffbe0b.chunk.js","sourcesContent":["import ConverterTool from \"./components/ConverterTool\";\r\n\r\nclass Convert{\r\n    static convertByType(inValue, inType, outType){\r\n      switch(inType){\r\n        case 'dec':\r\n          switch(outType){\r\n            case 'hex': return Convert.decToHex(inValue);\r\n            case 'bin': return Convert.decToBin(inValue);\r\n            case 'ascii': return Convert.decToAscii(inValue); //needs implement\r\n            default: return inValue;\r\n          }\r\n        case 'hex':\r\n          switch(outType){\r\n            case 'dec': return Convert.hexToDec(inValue);\r\n            case 'bin': return Convert.hexToBin(inValue);\r\n            case 'ascii': return Convert.hexToAscii(inValue);\r\n            default: return inValue;\r\n          }\r\n\r\n        case 'bin':\r\n          switch(outType){\r\n            case 'dec':return Convert.binToDec(inValue);\r\n            case 'hex':return Convert.binToHex(inValue);\r\n            case 'ascii': return Convert.binToAscii(inValue); \r\n            default: return inValue;\r\n          }\r\n\r\n        case 'ascii':\r\n          switch(outType){\r\n            case 'dec':return Convert.asciiToDec(inValue); // needs implement\r\n            case 'hex':return Convert.asciiToHex(inValue);\r\n            case 'bin':return Convert.asciiToBin(inValue);\r\n            default: return inValue;\r\n          }\r\n        default: return inValue;\r\n      }\r\n    }\r\n\r\n    static asciiToDec(ascii){\r\n      return Convert.binToDec(Convert.asciiToBin(ascii));\r\n    }\r\n\r\n    static decToAscii(dec){\r\n      return Convert.binToAscii(Convert.decToBin(dec));\r\n    }\r\n\r\n    static binToAscii(bin){\r\n      return Convert.hexToAscii(Convert.binToHex(bin));\r\n    }\r\n\r\n    static decToHex(dec){\r\n        const r = dec % 16;\r\n        const d = Math.floor(dec / 16);\r\n        const map = {10: 'a', 11: 'b', 12: 'c', 13: 'd', 14: 'e', 15: 'f'};\r\n        return `${d !== 0 ? Convert.decToHex(d) : ''}${r < 10 ? r : map[r]}`;\r\n    };\r\n    \r\n    static decToBin(dec){\r\n        const r = dec % 2;\r\n        const d = Math.floor(dec / 2);\r\n        return `${d !== 0 ? Convert.decToBin(d) : ''}${r}`;\r\n    };\r\n    \r\n    static hexToDec(hex){\r\n      \r\n      let dec = 0;\r\n      const map = {'a': 10, 'b': 11, 'c': 12, 'd': 13, 'e': 14, 'f': 15};\r\n      for(let i = 0; i < hex.length; i++ ){\r\n        dec += parseInt('abcdef'.includes(hex[i]) ? map[hex[i]] : hex[i]) * Math.pow(16, hex.length - 1 - i);\r\n      }\r\n      return dec;\r\n    }\r\n    \r\n    \r\n    static asciiToHex(ascii){\r\n      let hex = '';\r\n      for(let i = 0; i < ascii.length; i++ ){\r\n        let decimal = ascii.charCodeAt(i);\r\n        hex += Convert.decToHex(decimal); \r\n      }\r\n      return hex;\r\n    }\r\n     \r\n    static hexToBin(hex){\r\n      let bin = '';\r\n      \r\n      for(let i = 0; i < hex.length; i++){\r\n        let nibble = Convert.decToBin(Convert.hexToDec(hex[i]));\r\n        while(nibble.length < 4)\r\n          nibble = '0' + nibble;\r\n        bin += nibble;\r\n      }\r\n      \r\n      return bin;\r\n      \r\n    }\r\n    \r\n    static asciiToBin(ascii){\r\n      return Convert.hexToBin(Convert.asciiToHex(ascii));\r\n    }\r\n    \r\n    static xor(b0, b1){\r\n      var c0 = b0.length > b1.length ? b0 : b1, c1 = b0.length < b1.length ? b0 : b1;\r\n      if(c0.length === c1.length){\r\n        c0 = b0;\r\n      }\r\n      let result = '';\r\n\r\n      for(let i = c0.length -1, j = c1.length -1; i >=  0; i--){\r\n     \r\n        let firstTerm = parseInt(c0[i],2);\r\n        let secondTerm = (j < 0 ?  0 : parseInt(c1[j],2));\r\n        \r\n        let sum = firstTerm + secondTerm;\r\n        result = `${(sum === 2 ? 0 : sum)}${result}`;\r\n\r\n           j--;\r\n      }\r\n\r\n      return result;\r\n    }\r\n\r\n    static batchXor(arr){\r\n      switch(arr.length){\r\n        case 0: \r\n        case 1: return '0';\r\n        default:\r\n          let result = Convert.xor(arr[1], arr[0]);\r\n          for(let i = 2; i < arr.length; i++){\r\n            result = Convert.xor(arr[i], result);\r\n          }\r\n          return result;\r\n      }\r\n    }\r\n    \r\n    static binToDec(bin){\r\n      let rev = bin.split('').reverse().join('');\r\n      let dec = 0;\r\n      \r\n      for(let i = 0; i < rev.length; i++){\r\n        dec += parseInt(rev[i]) * Math.pow(2, i);\r\n      }\r\n      return dec;\r\n    }\r\n    \r\n    static binToHex(bin){\r\n      let hex = '';\r\n      \r\n      for(let i = 0; i < bin.length; i+=4){\r\n        let nibble = Convert.decToHex(Convert.binToDec(bin.substr(i, 4)));\r\n        hex += nibble;\r\n      }\r\n      \r\n      \r\n      return hex;\r\n    }\r\n\r\n    static hexToAscii(hex){\r\n        let ascii = '';\r\n        for(let i = 0; i < hex.length; i+=2){\r\n            ascii += String.fromCharCode(Convert.hexToDec(hex.substr(i, 2)));\r\n        }\r\n        return ascii;\r\n    }\r\n    \r\n    \r\n};\r\n\r\nexport default Convert;","import React, { Component } from \"react\";\r\nconst Output = (props) =>{\r\n    return(\r\n      <div id=\"output\" style={props.styleProp} >{props.outputValue}</div>\r\n    )\r\n  }\r\n\r\n  export default Output;\r\n  ","import Convert from '../Convert';\r\nimport React from 'react';\r\nimport { Component } from 'react';\r\nimport '../SourceCodePro.css';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport Select from 'react-select';\r\nimport '../styles.css';\r\nimport  { PropTypes } from 'react';\r\nimport Output from './output';\r\n\r\n\r\n\r\n\r\nclass ConverterTool extends Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        output: '',\r\n        input: '',\r\n        selectedOption1: null,\r\n        selectedOption2: null,\r\n        fromType: '',\r\n        toType: '',\r\n        disableInput:true\r\n      };\r\n      this.buttonClickOK = this.buttonClickOK.bind(this);\r\n      this.inputKeyDown = this.inputKeyDown.bind(this);\r\n      \r\n    }\r\n      \r\n    buttonClickOK(){\r\n      this.setState({output: Convert.hexToAscii(this.state.input)});\r\n    }\r\n  \r\n    inputKeyDown(e){\r\n      \r\n      if(!e.key){\r\n        let result = Convert.convertByType(e.target.value, this.state.fromType, this.state.toType);\r\n        \r\n        this.setState({\r\n          input: e.target.value,\r\n          output: result\r\n        });\r\n      }\r\n    }\r\n\r\n    shouldDisableConversion = (opt1, opt2) => {\r\n      if(opt1 === null || opt2 === null)\r\n        return true;\r\n\r\n\r\n      const disableConversion = opt1.value === 'dec' && opt2.value === 'ascii';\r\n      return disableConversion || (opt1.value === 'ascii' && opt2.value === 'dec');\r\n    }\r\n  \r\n    dropDown1Changed = (value) => {\r\n      this.setState((prevState,props)=>(\r\n        {\r\n          selectedOption1:value,\r\n          fromType: value.value,\r\n          disableInput: this.shouldDisableConversion(value, prevState.selectedOption2)\r\n         }\r\n      ));\r\n    }\r\n    dropDown2Changed = (value) => {\r\n      this.setState((prevState,props)=>(\r\n        {\r\n          selectedOption2:value,\r\n          toType: value.value,\r\n          disableInput: this.shouldDisableConversion(prevState.selectedOption1, value)\r\n         }\r\n      ));\r\n    }\r\n  \r\n    render(){\r\n      const options = [\r\n        { value: 'hex', label: 'Hex' },\r\n        { value: 'dec', label: 'Decimal' },\r\n        { value: 'bin', label: 'Binary' },\r\n        { value: 'ascii', label: 'ASCII' }\r\n      ];\r\n      //const { selectedOption } = this.state;\r\n      return(\r\n        <div className=\"well subWell\">\r\n                  <p style={{marginBottom:'.75em',fontSize: '.75em'}}>convert</p>\r\n                  <div className=\"row\" style={{marginBottom: '15px'}}>\r\n                    <div className=\"col-sm-4 col-md-4 col-xs-4\">\r\n                    \r\n                    <Select\r\n                      onChange={this.dropDown1Changed}\r\n                      options={options}\r\n                    />\r\n                    </div>    \r\n                    <div className=\"col-sm-8 col-md-8 col-xs-8\">\r\n                        <input type=\"text\" id=\"input\" disabled={this.state.disableInput} value={this.state.input} className=\"form-control\" onChange={this.inputKeyDown} onKeyDown={this.inputKeyDown} value={this.state.input}/>\r\n                    </div>\r\n                  </div>\r\n                  <p style={{marginBottom:'.75em',fontSize: '.75em'}}>to</p>\r\n                  <div className=\"row\" style={{marginBottom: '15px'}}>\r\n                    <div className=\"col-sm-4 col-md-4 col-xs-4\">\r\n                    <Select\r\n                      onChange={this.dropDown2Changed}\r\n                      options={options}\r\n                    />\r\n                    </div>    \r\n                    <div className=\"col-sm-8 col-md-8 col-xs-8\">\r\n                        <Output outputValue={this.state.output}/>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {/*<div >\r\n                    <button id=\"confirm\" style={{width:'100%'}} onClick={this.buttonClickOK} defaultValue='' className=\"btn btn-primary \"><span className=\"fa fa-plus\"></span> Convert</button>\r\n                  </div>*/}\r\n                  <br/>\r\n              </div>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default ConverterTool;","import '../SourceCodePro.css';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../styles.css';\r\nimport  { PropTypes } from 'react';\r\n\r\n\r\nimport React, { Component } from 'react';\r\n\r\n\r\nclass ListItem extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    \r\n  render() {\r\n      return(\r\n        (<div>\r\n            <div id=\"output\" style={{borderRadius:0}} >{this.props.item.output}\r\n              <span style={{float : 'right', fontSize: '1.5em', cursor: 'pointer'}} onClick={this.props.closeHandler.bind(null, this.props.item.id)}>{String.fromCharCode(215)}</span>\r\n            </div>\r\n          </div>)\r\n      )\r\n    \r\n  }\r\n}\r\n\r\nexport default ListItem;","\r\nimport React from 'react';\r\n\r\nimport '../SourceCodePro.css';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../styles.css';\r\nimport  { PropTypes } from 'react';\r\n\r\nimport ListItem from './ListItem';\r\n\r\n\r\nexport default function ListItems(props) {\r\n    let items = [];\r\n    \r\n    for(let i in props.items){\r\n        items.push(<ListItem key={props.items[i].id.toString()} item={props.items[i]} closeHandler={props.closeHandler}/>  )\r\n    }\r\n\r\n    return items;\r\n\r\n/*\r\n    return(\r\n        <div>\r\n            {items}\r\n        </div>\r\n    )*/\r\n}\r\n","\r\nimport React from 'react';\r\nimport { Component } from 'react';\r\nimport '../SourceCodePro.css';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport Select from 'react-select';\r\nimport '../styles.css';\r\n\r\n\r\nimport ListItems from './ListItems';\r\nimport Convert from '../Convert';\r\n\r\nconst EmphasizedChar = (props) =>{\r\n  if(props.emphasized){\r\n    let localStyle = {};\r\n    localStyle.color = 'red';\r\n    localStyle.backgroundColor = 'black';\r\n    return <span style={localStyle}>*</span>\r\n  }else{\r\n    return <span style={props.styleProp}>{props.char}</span>;\r\n  }\r\n    \r\n};\r\n\r\nconst mapSpaces = (str, styleProp = {}) =>{\r\n  \r\n  return str.split('').map((item, index)=> <EmphasizedChar key={index.toString()} styleProp={styleProp} char={item} emphasized={item.charCodeAt(0) % 32 === 0}/>);\r\n};\r\n\r\nclass XorTool extends Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.dropDownChanged = this.dropDownChanged.bind(this);\r\n      this.closeHandler = this.closeHandler.bind(this);\r\n      this.buttonClickOK = this.buttonClickOK.bind(this);\r\n      this.inputKeyDown = this.inputKeyDown.bind(this);\r\n\r\n      this.state = {\r\n        input: '',\r\n        output: '',\r\n        outputStyled: '0',\r\n        outputNonStyled: '',\r\n        selectedOption : null,\r\n        items:[],\r\n        disableInput: true\r\n      }\r\n\r\n     \r\n    }\r\n  \r\n    dropDownChanged(event){\r\n      this.setState({input: ''});\r\n      this.setState((prevState, props) =>(\r\n        {\r\n          selectedOption: event, \r\n          disableInput: false, \r\n          output: prevState.selectedOption === null ? '0' : Convert.convertByType(prevState.output,  prevState.selectedOption.value, event.value)\r\n        }));\r\n    }\r\n\r\n    closeHandler(id){\r\n      this.setState((prevState, props)=>{\r\n        const filtered = prevState.items.filter((currentVal)=> currentVal.id !== id);\r\n        let binaryArray = [];\r\n        for (let i in filtered)\r\n          binaryArray.push(filtered[i].binaryValue);\r\n        return{\r\n          \r\n          output: Convert.convertByType(Convert.batchXor(binaryArray), 'bin', prevState.selectedOption.value),\r\n          items: filtered\r\n        }\r\n      }\r\n      )\r\n    }\r\n\r\n    buttonClickOK(){\r\n      if(this.state.selectedOption === null || this.state.input.length === 0)\r\n        return;\r\n\r\n      let xor = Convert.xor('1110', '1000');\r\n\r\n\r\n      this.setState((prevState, props) =>{\r\n        const newItem = {\r\n          id: prevState.items.length,\r\n          output: prevState.input,\r\n          binaryValue: Convert.convertByType(prevState.input, prevState.selectedOption.value, 'bin' )\r\n        };\r\n\r\n        let binaryArray = [newItem.binaryValue];\r\n\r\n        for (let i in prevState.items)\r\n          binaryArray.push(prevState.items[i].binaryValue);\r\n\r\n        const output = Convert.convertByType(Convert.batchXor(binaryArray), 'bin', prevState.selectedOption.value);\r\n\r\n        return{\r\n          input: '',\r\n          items: [...prevState.items, newItem],\r\n          output: output,\r\n          outputStyled: output\r\n        }\r\n      })\r\n    }\r\n\r\n    inputKeyDown(e){\r\n      var validInput;\r\n\r\n      switch(this.state.selectedOption.value){\r\n        case 'hex':\r\n        validInput = /^[a-f0-9]+$/i.test(e.target.value);\r\n        break;\r\n        case 'bin':\r\n        validInput = /^[01]+$/i.test(e.target.value);\r\n        break;\r\n        case 'dec':\r\n        validInput = /^[0-9]+$/i.test(e.target.value);\r\n        break;\r\n        case 'ascii':\r\n        validInput = /^.+$/i.test(e.target.value);\r\n        break;\r\n\r\n      }\r\n\r\n      const inputText = e.target.value;\r\n\r\n      if(validInput ||  inputText.length === 0)\r\n        this.setState((prevState,props)=>{\r\n          \r\n          \r\n          const newBinary = Convert.convertByType(inputText,  prevState.selectedOption.value, 'bin' );\r\n          let binaryArray = [];\r\n\r\n          for (let i in prevState.items) \r\n            binaryArray.push(prevState.items[i].binaryValue);\r\n\r\n          const text = `${Convert.convertByType(Convert.batchXor(inputText.length === 0 ? binaryArray : [...binaryArray, newBinary]), 'bin', prevState.selectedOption.value)}`;\r\n           \r\n\r\n          const styled = (text.substr(text.length - inputText.length ));\r\n          const nonStyled = (text.substr(0, text.length - inputText.length ));\r\n\r\n\r\n          return {\r\n            output:text,\r\n            input: inputText,\r\n            outputStyled: mapSpaces(styled , {backgroundColor:'blue',color:'white'} ),\r\n            outputNonStyled: mapSpaces(nonStyled)\r\n          }\r\n        });\r\n    }\r\n  \r\n    render(){\r\n      const options = [\r\n        { value: 'hex', label: 'Hex' },\r\n        { value: 'dec', label: 'Decimal' },\r\n        { value: 'bin', label: 'Binary' },\r\n        { value: 'ascii', label: 'ASCII' }\r\n      ];\r\n      return(\r\n        <div>\r\n          \r\n          <div className=\"well subWell\" style={{borderRadius: '20px 20px 0px 0px'}}>\r\n            <p style={{marginBottom:'.75em',fontSize: '.75em'}}>xor<span style={{color:'blue'}}>{`  length: ${this.state.outputNonStyled.length + this.state.outputStyled.length}`}</span></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-12 col-xs-12 col-md-12 col-lg-12\" style={{marginBottom:'5px'}}>\r\n              <div id=\"output\">\r\n                {/* this.state.output */}\r\n                {(this.state.outputNonStyled)}{(this.state.outputStyled)}\r\n              </div>\r\n              </div>\r\n            </div>\r\n            <p style={{marginBottom:'.75em',fontSize: '.75em'}}>input</p>\r\n            <input type=\"text\" id=\"input\" disabled={this.state.disableInput} value={this.state.input} className=\"form-control\" onChange={this.inputKeyDown}  value={this.state.input}/>\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-10 col-xs-10 col-md-10 col-lg-10\">\r\n                <Select style={{display:'inline'}}\r\n                  onChange={this.dropDownChanged}\r\n                  options={options}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-2 col-xs-2 col-md-2 col-lg-2\">\r\n                <button id=\"confirm\" style={{float:'right'}} onClick={this.buttonClickOK} defaultValue='' className=\"btn btn-primary \"><span className=\"fa fa-plus\"></span> </button>\r\n                  </div>\r\n                \r\n            </div>\r\n            \r\n          </div>\r\n          <div className=\"well\" style={{borderRadius: 0,background: '#fefefe', minHeight: '250px'}}>\r\n            <ListItems items={this.state.items} closeHandler={this.closeHandler}/>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  export default XorTool;","import React, { Component } from 'react'\r\nimport Output from './output';\r\n\r\nimport Convert from '../Convert';\r\n\r\nexport class DecryptTool extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            kInput: '',\r\n            ctInput: '',\r\n            output: ''\r\n        };\r\n        this.ctInputKeyDown = this.ctInputKeyDown.bind(this);\r\n        this.kInputKeyDown = this.kInputKeyDown.bind(this);\r\n    }\r\n\r\n    ctInputKeyDown(e){\r\n        const inputText = e.target.value;\r\n        if(e.target !== null && /^[a-f0-9]+$/i.test(inputText) || inputText.length == 0){ // validating hex format\r\n            this.setState((prevState,props) => {\r\n                return {\r\n                    ctInput: inputText,\r\n                    output: prevState.kInput.length > 0 ? Convert.binToAscii(Convert.xor(Convert.hexToBin(prevState.kInput), Convert.hexToBin(prevState.ctInput) )) :''\r\n                }   \r\n            });\r\n        }\r\n    }\r\n\r\n    kInputKeyDown(e){\r\n        const inputText = e.target.value;\r\n        if(e.target !== null && /^[a-f0-9]+$/i.test(inputText) || inputText.length == 0){ // validating hex format\r\n            this.setState((prevState,props) => {\r\n                return {\r\n                    kInput: inputText,\r\n                    output: prevState.ctInput.length > 0 ? Convert.binToAscii(Convert.xor(Convert.hexToBin(prevState.ctInput), Convert.hexToBin(prevState.kInput) )) :''\r\n                }   \r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"well subWell\">\r\n            \r\n                <p style={{marginBottom:'.75em',fontSize: '.75em'}}>key (hex)</p>\r\n                <input type=\"text\" id=\"input\"  className=\"form-control\" onChange={this.kInputKeyDown} value={this.state.kInput}/>\r\n                <p style={{marginBottom:'.75em',fontSize: '.75em'}}>cypher text (hex)</p>\r\n                <input type=\"text\" id=\"input\"  className=\"form-control\" onChange={this.ctInputKeyDown} value={this.state.ctInput}/>\r\n                <p style={{marginBottom:'.75em',fontSize: '.75em'}}>result (ascii)</p>\r\n                <Output outputValue={this.state.output}/>\r\n            \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DecryptTool\r\n","import React from 'react';\nimport { Component } from 'react';\n\n\nimport './App.css';\nimport ConverterTool from './components/ConverterTool';\nimport Output from './components/output';\nimport XorTool from './components/xortool';\nimport DecryptTool from './components/DecryptTool';\n\nimport './SourceCodePro.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\n\nimport './styles.css';\n\n\n//import './fontawesome-free-5.7.2-web/css/all.min.css';\n\nOutput.defaultProps = {styleProp: {}};\n \nclass App extends Component {\n \n  constructor(props){\n    super(props);\n  }\n\n  render() {\n \n\n    return (\n      <div style={{height: '100%'}} className=\"container-fluid\" align=\"center\">\n\n\n          <div className=\"box\" align=\"left\">\n              <h2 className=\"lw text-center\">decrypt utility</h2>\n              \n                <div style={{width:'48%', float:'left'}}>\n                  <div className=\"well\">\n                  <DecryptTool/>\n                  </div>\n                </div>\n                <div style={{width:'48%', float:'right'}}>\n\n                  <div className=\"well\" >\n                  <XorTool/> \n                  </div>\n                </div>\n                \n              \n              <div className=\"well\" style={{width:'48%', float:'left'}}>\n                <ConverterTool/>\n              </div>\n          </div>\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}